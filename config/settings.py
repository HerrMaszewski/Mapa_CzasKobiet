"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
from decouple import config
import platform
import dj_database_url



BASE_DIR = Path(__file__).resolve().parent.parent

# SECURITY
SECRET_KEY = config('SECRET_KEY')
DEBUG = config('DEBUG', default=False, cast=bool)

# Poprawka: domyślnie lokalny host, można nadpisać zmienną env
ALLOWED_HOSTS = config('ALLOWED_HOSTS', default='localhost').split(',')

# APLIKACJE
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.gis',        # GeoDjango
    'leaflet',                   # Leaflet map support
    'mapa',                      # Twoja aplikacja
]

# MIDDLEWARE
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# URLS / WSGI
ROOT_URLCONF = 'config.urls'
WSGI_APPLICATION = 'config.wsgi.application'

# SZABLONY
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# BAZA DANYCH
DATABASES = {
    'default': dj_database_url.config(
        default=config("DATABASE_URL"),
        conn_max_age=600,
        ssl_require=True,
    )
}

# WALIDACJA HASEŁ
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# I18N
LANGUAGE_CODE = 'pl'
TIME_ZONE = 'Europe/Warsaw'
USE_I18N = True
USE_TZ = True

# STATIC FILES
STATIC_URL = '/static/'
STATICFILES_DIRS = [BASE_DIR / 'mapa' / 'static']
STATIC_ROOT = BASE_DIR / 'staticfiles'

# AUTO PK
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# GDAL PATH (dla GeoDjango)
if platform.system() == 'Windows':
    GDAL_LIBRARY_PATH = os.path.join(
        os.environ.get('CONDA_PREFIX', ''), 'Library', 'bin', 'gdal308.dll'
    )
else:
    GDAL_LIBRARY_PATH = '/usr/lib/libgdal.so'

# Leaflet config
LEAFLET_CONFIG = {
    'DEFAULT_CENTER': (52.4064, 16.9252),
    'DEFAULT_ZOOM': 6,
    'MAX_ZOOM': 20,
    'MIN_ZOOM': 4,
    'SCALE': 'both',
}

# API KEYS
OPENCAGE_API_KEY = config("OPENCAGE_API_KEY")
GOOGLE_MAPS_API_KEY = config("GOOGLE_MAPS_API_KEY")